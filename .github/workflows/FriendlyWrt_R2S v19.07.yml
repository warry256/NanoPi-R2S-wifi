name: NanoPi-R2S OpenWrt 19.07 Build

env:
  SSH_ACTIONS:  true
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

on:
  #push:
    #paths:
    #  - 'CHANGELOG.md'
  watch:
    types: started
  #schedule:
    #- cron: '00 10 * * 1,3,5'

jobs:

  build:
    runs-on: ubuntu-18.04

    steps:

      - name: Checkout
        uses: actions/checkout@master
        #with:
        #  ref: master

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo apt-get update
          sudo apt-get -y --no-install-recommends install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          curl https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/852acb5b6511d31a450fd0a8829a0f795b3f21fd/install.sh  | sed '/#/d' | sed 's/\\//g' | sed 's/exit 0//g' | sed 's/sudo apt -y install//g' | sed 's/sudo apt-get -y install//g' | sed 's/:i386//g' | xargs sudo apt-get -y --no-install-recommends install
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /usr/local/share/boost /opt/ghc
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
      - name: Download Source
        run: |
          rm -rf code
          mkdir code
          cd code
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v19.07.5 -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          cp ../rk3328.xml ../code/.repo/manifests/rk3328.xml
          repo sync -c --no-clone-bundle -j8
          
      - name: Update Feeds		
        run: |		
          cd code/friendlywrt
          ./scripts/feeds update -a

          rm -rf feeds/packages/net/zerotier
          chmod +x ./target/linux/rockchip-rk3328/base-files/etc/board.d/01_leds
          chmod +x ./target/linux/rockchip-rk3328/base-files/etc/board.d/02_network
             
      - name: Processing drivers
        run: |
          cd code/friendlywrt/package
          
          #漂亮的主题
          git clone https://github.com/jerrykuku/luci-theme-argon.git custom/luci-theme-argon
          git clone --depth=1 https://github.com/jerrykuku/luci-app-argon-config  custom/luci-app-argon-config
          git clone https://github.com/tracemouse/luci-theme-netgear

          #越过长城
          svn co https://github.com/vernesong/OpenClash/trunk/luci-app-openclash custom/luci-app-openclash
          
          svn co https://github.com/fw876/helloworld/trunk/luci-app-ssr-plus custom/luci-app-ssr-plus
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/redsocks2 custom/redsocks2
          
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-n2n_v2 custom/luci-app-n2n_v2
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/n2n_v2 custom/n2n_v2
          
          git clone https://github.com/xiaorouji/openwrt-passwall.git custom/openwrt-passwall
          mv custom/openwrt-passwall/v2ray-core custom/
          mv custom/openwrt-passwall/v2ray-plugin custom/
          mv custom/openwrt-passwall/xray-core custom/
          mv custom/openwrt-passwall/xray-plugin custom/
          sed -i 's/GO111MODULE=on/GO111MODULE=off/' custom/xray-core/Makefile
          sed -i 's/GO111MODULE=on/GO111MODULE=off/' custom/xray-plugin/Makefile
          sed -i 's/GO111MODULE=on/GO111MODULE=off/' custom/v2ray-core/Makefile
          sed -i 's/GO111MODULE=on/GO111MODULE=off/' custom/v2ray-plugin/Makefile
          
          #####
          git clone https://github.com/jerrykuku/lua-maxminddb.git custom/lua-maxminddb
          git clone https://github.com/jerrykuku/luci-app-vssr.git custom/luci-app-vssr
          git clone --depth=1 https://github.com/garypang13/luci-app-bypass custom/luci-app-bypass
          git clone --depth=1 https://github.com/garypang13/smartdns-le custom/smartdns-le    
          
          # 修改 golang && dockce &&
          cd ../
          #rm -rf feeds/packages/utils/docker-ce
          rm -rf feeds/luci/applications/luci-app-docker
          rm -rf feeds/packages/libs/libcap/ && svn co https://github.com/openwrt/openwrt/trunk/package/libs/libcap feeds/packages/libs/libcap
          rm -rf feeds/packages/lang/golang/ && svn co https://github.com/coolsnowwolf/packages/trunk/lang/golang feeds/packages/lang/golang
          rm -rf feeds/packages/lang/luasec && svn co https://github.com/coolsnowwolf/packages/trunk/lang/luasec feeds/packages/lang/luasec
          rm -rf feeds/packages/utils/runc && svn export https://github.com/coolsnowwolf/packages/trunk/utils/runc feeds/packages/utils/runc
          rm -rf feeds/packages/utils/containerd && svn export https://github.com/coolsnowwolf/packages/trunk/utils/containerd feeds/packages/utils/containerd
          rm -rf feeds/packages/utils/libnetwork && svn co https://github.com/coolsnowwolf/packages/trunk/utils/libnetwork feeds/packages/utils/libnetwork
                    
          rm -rf feeds/packages/utils/docker && svn co https://github.com/coolsnowwolf/packages/trunk/utils/docker feeds/packages/utils/docker
          rm -rf feeds/packages/utils/dockerd && svn co https://github.com/coolsnowwolf/packages/trunk/utils/dockerd feeds/packages/utils/dockerd
          rm -rf feeds/packages/utils/docker-compose && svn co https://github.com/coolsnowwolf/packages/trunk/utils/docker feeds/packages/utils/docker-compose
          
          
          # rm -rf feeds/packages/utils/docker-ce && svn co https://github.com/coolsnowwolf/packages/branches/openwrt-19.07/utils/docker-ce feeds/packages/utils/docker-ce
          # rm -rf feeds/luci/applications/luci-app-docker  && svn co https://github.com/coolsnowwolf/openwrt/trunk/package/lean/luci-app-docker feeds/luci/applications/luci-app-docker 
          
          #rm -rf feeds/packages/utils/docker-ce && svn export https://github.com/coolsnowwolf/packages/branches/openwrt-19.07/utils/docker-ce feeds/packages/utils/docker-ce
          #sed -i '/call CheckExpectedSrcVer/d' feeds/packages/utils/docker-ce/Makefile
          #sed -i '/call CheckExpectedSrcVer/d' feeds/packages/utils/docker-ce/Makefile
          #sed -i '/call CheckExpectedSrcVer/d' feeds/packages/utils/docker-ce/Makefile
          #sed -i '/call CheckExpectedSrcVer/d' feeds/packages/utils/docker-ce/Makefile
          
          sed -i '/enable-jsonc/i\\t--disable-cloud \\' feeds/packages/admin/netdata/Makefile

          cd package/
          
          #####
          #svn co https://github.com/coolsnowwolf/packages/branches/openwrt-19.07/utils/docker-ce custom/docker-ce
          #svn co https://github.com/lisaac/luci-app-dockerman/trunk/applications/luci-app-dockerman custom/luci-app-dockerman
          #svn co https://github.com/lisaac/luci-lib-docker/trunk/collections/luci-lib-docker custom/luci-lib-docker
          #sed -i '/dockerd/d' custom/luci-app-dockerman/Makefile
          #sed -i 's/+docker/+docker-ce/g' custom/luci-app-dockerman/Makefile
          #sed -i 's/..\/..\/lang\/golang\/golang-package.mk/..\/..\/..\/feeds\/packages\/lang\/golang\/golang-package.mk/g' custom/docker-ce/Makefile

          #广告过滤
          git clone https://github.com/rufengsuixing/luci-app-adguardhome.git custom/luci-app-adguardhome
          #svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/adbyby custom/adbyby
          #svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-adbyby-plus custom/luci-app-adbyby-plus
          
          #git clone https://github.com/garypang13/luci-app-dnsfilter.git custom/luci-app-dnsfilter
          svn co https://github.com/ykxVK8yL5L/packages/trunk/openwrt-packages/luci-app-dnsfilter custom/luci-app-dnsfilter
          
          
          #VPN，虚拟局域网
          ### zerotier
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-zerotier custom/luci-app-zerotier
          svn co https://github.com/coolsnowwolf/packages/trunk/net/zerotier custom/zerotier
          
          
          #系统工具
          svn co https://github.com/songchenwen/nanopi-r2s/trunk/luci-app-r2sflasher custom/luci-app-r2sflasher
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-netdata custom/luci-app-netdata
          
          #smart dns
          # Add luci-app-smartdns & smartdns
          #svn co https://github.com/281677160/openwrt-package/trunk/feeds/luci/applications/luci-app-smartdns custom/luci-app-smartdns
          #svn co https://github.com/281677160/openwrt-package/trunk/feeds/packages/net/smartdns  custom/smartdn
          
          # kms服务器
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/vlmcsd  custom/vlmcsd
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-vlmcsd custom/luci-app-vlmcsd
          
          ## autoreboot 
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-autoreboot custom/luci-app-autoreboot
          
          ## luci-app-usb-printer && filetransfer
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-usb-printer custom/luci-app-usb-printer
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-filetransfer custom/luci-app-filetransfer
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-lib-fs custom/luci-lib-fs
          
          ## 网络驱动
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/r8125 custom/r8125
          #svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/r8152 custom/r8152
          svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/r8168 custom/r8168
          svn co https://github.com/immortalwrt/immortalwrt/trunk/package/kernel/rtl8812au-ac custom/rtl8812au-ac 
          svn co https://github.com/immortalwrt/immortalwrt/trunk/package/kernel/rtl8821cu custom/rtl8821cu
          svn co https://github.com/immortalwrt/immortalwrt/trunk/package/kernel/rtl8188eu custom/rtl8188eu
          svn co https://github.com/immortalwrt/immortalwrt/trunk/package/kernel/rtl8192eu custom/rtl8192eu
          svn co https://github.com/immortalwrt/immortalwrt/trunk/package/kernel/rtl88x2bu custom/rtl88x2bu


          #关闭一些不必要的软件
          rm -rf custom/luci-app-ssr-plus
          rm -rf custom/openwrt-passwall/luci-app-passwall
          #rm -rf custom/luci-app-vssr
          #rm -rf custom/luci-app-openclash
          #rm -rf custom/luci-app-bypass
          
          
          # UPX 可执行软件压缩
          cd ../
          sed -i '/patchelf pkgconf/i\tools-y += ucl upx' ./tools/Makefile
          sed -i '\/autoconf\/compile :=/i\$(curdir)/upx/compile := $(curdir)/ucl/compile' ./tools/Makefile
          svn co https://github.com/immortalwrt/immortalwrt/branches/master/tools/upx tools/upx
          svn co https://github.com/immortalwrt/immortalwrt/branches/master/tools/ucl tools/ucl
          
      - name: Update Target.mk
        run: |
          cd code/friendlywrt/include
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci /' target.mk
          
          
      - name: Install Feeds		
        run: |		
          cd code/friendlywrt		
          ./scripts/feeds install -a
          rm -rf feeds/packages/utils/docker-ce
          rm -rf feeds/luci/applications/luci-app-docker

      - name: SSH连接
        uses: DONGYUSEN/debugger-action@master
        if: env.SSH_ACTIONS == 'true'

      - name: Custom Configure Files
        run: |
          rm -f code/friendlywrt/.config*
          cat feeds-1907.conf > code/friendlywrt/.config
          cp feeds-1907.conf code/configs/config_rk3328
          
      - name: Install Clash Binaries
        run: |
          cd code/friendlywrt/package/base-files/files
          mkdir -p etc/openclash/core
          # for updates, go to: https://github.com/Dreamacro/clash/releases
          wget -qO- https://github.com/Dreamacro/clash/releases/download/v1.7.1/clash-linux-armv8-v1.7.1.gz | gunzip -c > etc/openclash/core/clash
          # for updates, go to: https://github.com/vernesong/OpenClash/releases/tag/TUN-Premium
          wget -qO- https://github.com/vernesong/OpenClash/releases/download/TUN-Premium/clash-linux-armv8-2021.09.15.gz | gunzip -c > etc/openclash/core/clash_tun
          # for updates, go to: https://github.com/vernesong/OpenClash/releases/tag/TUN
          wget -qO- https://github.com/vernesong/OpenClash/releases/download/TUN/clash-linux-armv8.tar.gz | tar xOvz > etc/openclash/core/clash_game
          chmod +x etc/openclash/core/clash*
        
      - name: Set Default Values
        run: |
          cd code/friendlywrt
          echo -e "\nBuild date:$(date +%Y-%m-%d), by dongyusen@gmail.com\n" >> package/base-files/files/etc/banner
          sed -i 's/timezone='UTC'/timezone='CST-8'/' package/base-files/files/bin/config_generate
          # patch -p1 <  ../../newpatches/luci/0004-luci-mod-status-add-realtime-CPU-information-display.patch 
          cp ../../patches/002patch-cpuinfo.patch 002patch-cpuinfo.patch
          patch -p0 <  002patch-cpuinfo.patch

          make defconfig
      
      - name: Install UPX
        run: |
          wget -q -O - https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz | tar -Jx --strip 1 -f - -C code/friendlywrt/staging_dir/host/bin/
          

      - name: Build OpenWrt
        run: |
          cd code
          sed -i '/feeds/d' scripts/mk-friendlywrt.sh          
          sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
          sed -i 's/make -j$(nproc) V=s/make -j3/' scripts/mk-friendlywrt.sh
          ./build.sh nanopi_r2s.mk

      - name: Fix Rootfs Owner and Group
        run: |
          
          lodev=$(sudo losetup -f)
          echo "found unused loop dev $lodev"
          sudo losetup -o 100663296 $lodev code/out/*.img
          #sudo mkfs -t ext4 $lodev
          sudo rm -rf /mnt/friendlywrt-tmp
          sudo mkdir -p /mnt/friendlywrt-tmp
          sudo mount $lodev /mnt/friendlywrt-tmp
          sudo chown -R root:root /mnt/friendlywrt-tmp
          
          sudo df -lh
          
          # Copy Some Scripts
          sudo cp ./scripts/cpuinfo.sh /mnt/friendlywrt-tmp/bin/cpuinfo && sudo chmod +x /mnt/friendlywrt-tmp/bin/cpuinfo
          sudo cp ./scripts/ipv6-helper.sh /mnt/friendlywrt-tmp/bin/ipv6-helper.sh && sudo chmod +x /mnt/friendlywrt-tmp/bin/ipv6-helper.sh
          sudo cp ./scripts/FCN_V3.9_Linux.zip /mnt/friendlywrt-tmp/root
          sudo cp ./scripts/luci-app-dnsfilter_1.0-8_all.ipk /mnt/friendlywrt-tmp/root
          # sed -i  "s/_('Architecture'),boardinfo.system/'_('Architecture'),ARMv8 Cortex-A53,64-bit'/"  /mnt/friendlywrt-tmp/www/luci-static/resources/view/status/include/10_system.js

          sudo umount /mnt/friendlywrt-tmp
          sudo losetup -d $lodev
          
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          
          cd code/out
          tar -czvf FriendlyWrt_NanoPi-R2S.img.tar.gz *.img
          cd ../../
          cp code/out/FriendlyWrt_NanoPi-R2S.img.tar.gz ./artifact/
          md5sum code/out/FriendlyWrt_NanoPi-R2S.img.tar.gz > ./artifact/md5.txt
          find ./ -name *.ipk > ./artifact/ipkfiles.txt
          
          # 只保留tar.gz
          # cp code/out/*.zip ./artifact/

          cp code/friendlywrt/.config ./artifact/config.txt
          
          # cd ./code/friendlywrt/staging_dir/packages/
          # tar -czvf packages.tar.gz rockchip-rk3328/
          # cd ../../../../
          # cp ./code/friendlywrt/staging_dir/packages/packages.tar.gz ./artifact/
          # cd ./artifact/
          # md5sum packages.tar.gz > packages.tar.gz.md5.txt
          
          mkdir ./artifact/package
          
          cp ./code/friendlywrt/bin/packages/aarch64_cortex-a53/base/*.ipk ./artifact/package
          cp ./code/friendlywrt/bin/packages/aarch64_cortex-a53/packages/*.ipk  ./artifact/package
          cp ./code/friendlywrt/bin/packages/aarch64_cortex-a53/luci/*.ipk  ./artifact/package
          cp ./code/friendlywrt/build_dir/target-aarch64_cortex-a53_musl/openwrt-imagebuilder-19.07.5-rockchip-rk3328.Linux-x86_64/packages/*.ipk ./artifact/package
          tar -czvf packages.tar.gz ./artifact/package/*.ipk
          rm -rf ./artifact/package/
          mv packages.tar.gz ./artifact/
          md5sum ./artifact/packages.tar.gz >> ./artifact/md5.txt
          echo "strDate=$(TZ=UTC-8 date '+%Y-%m-%d')" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R2S RK3328 v19.07
          path: ./artifact/
 
      - name: set NOW
        run: |
          echo "::set-env name=NOW::$(date +'%Y-%m-%d-%H-%M-%S')"
    
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.8.6
        with:
          name: "Friendlywrt R2s v19.07.5"
          #allowUpdates: true
          tag: ${{ env.NOW }}
          #tag_name: ${{env.strDate}} 
          #commit: main
          #replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ./artifact/*.gz,./artifact/*.txt
          
      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 120
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
          
      - name: Delete Artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            FriendlyWrt_NanoPi-R2S RK3328 v19.07
